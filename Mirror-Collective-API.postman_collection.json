{
	"info": {
		"_postman_id": "mirror-collective-api-collection",
		"name": "Mirror Collective Python API",
		"description": "Complete API collection for Mirror Collective Python API with authentication, chat, and health endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "mirror-collective-api"
	},
	"item": [
		{
			"name": "Health & Info",
			"item": [
				{
					"name": "Basic Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Basic health check endpoint"
					},
					"response": []
				},
				{
					"name": "Detailed Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/detailed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								"detailed"
							]
						},
						"description": "Detailed health check with dependency validation"
					},
					"response": []
				},
				{
					"name": "API Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "API health check endpoint"
					},
					"response": []
				},
				{
					"name": "API Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api"
							]
						},
						"description": "API information and service discovery"
					},
					"response": []
				}
			],
			"description": "Health checks and API information endpoints"
		},
		{
			"name": "Authentication - Public",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.userSub) {",
									"        pm.environment.set('user_sub', responseJson.data.userSub);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"fullName\": \"{{test_full_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.tokens) {",
									"        pm.environment.set('access_token', responseJson.data.tokens.accessToken);",
									"        pm.environment.set('refresh_token', responseJson.data.tokens.refreshToken);",
									"        pm.environment.set('id_token', responseJson.data.tokens.idToken);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Authenticate user and return tokens"
					},
					"response": []
				},
				{
					"name": "Confirm Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"verificationCode\": \"{{verification_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/confirm-email",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"confirm-email"
							]
						},
						"description": "Confirm email address with verification code"
					},
					"response": []
				},
				{
					"name": "Resend Verification Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/resend-verification-code",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"resend-verification-code"
							]
						},
						"description": "Resend email verification code"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/forgot-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						},
						"description": "Initiate password reset process"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"resetCode\": \"{{reset_code}}\",\n  \"newPassword\": \"{{new_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password"
							]
						},
						"description": "Reset password using verification code"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.accessToken) {",
									"        pm.environment.set('access_token', responseJson.data.accessToken);",
									"        if (responseJson.data.refreshToken) {",
									"            pm.environment.set('refresh_token', responseJson.data.refreshToken);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Refresh access token using refresh token"
					},
					"response": []
				}
			],
			"description": "Public authentication endpoints"
		},
		{
			"name": "Authentication - Protected",
			"item": [
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user profile"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user and invalidate tokens"
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"account"
							]
						},
						"description": "Delete current user account"
					},
					"response": []
				}
			],
			"description": "Protected authentication endpoints that require JWT token"
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "Mirror Chat (Legacy)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"{{chat_message}}\",\n  \"userName\": \"{{test_full_name}}\",\n  \"conversationHistory\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Hello there!\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Hi! How can I help you today?\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/mirror",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"mirror"
							]
						},
						"description": "Legacy mirror chat endpoint (stateless)"
					},
					"response": []
				},
				{
					"name": "Enhanced Mirror Chat",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"{{chat_message}}\",\n  \"conversationId\": null,\n  \"userName\": \"{{test_full_name}}\",\n  \"createNewConversation\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/enhanced",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"enhanced"
							]
						},
						"description": "Enhanced chat with persistent conversation management"
					},
					"response": []
				},
				{
					"name": "Enhanced Chat - Continue Conversation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Continue our previous discussion\",\n  \"conversationId\": \"{{conversation_id}}\",\n  \"userName\": \"{{test_full_name}}\",\n  \"createNewConversation\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/enhanced",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"enhanced"
							]
						},
						"description": "Continue an existing conversation"
					},
					"response": []
				},
				{
					"name": "Get User Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/chat/conversations?limit=50&include_archived=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"conversations"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "Maximum number of conversations to return (1-100)"
								},
								{
									"key": "include_archived",
									"value": "false",
									"description": "Include archived conversations"
								}
							]
						},
						"description": "Get all conversations for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Conversation Detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/chat/conversations/{{conversation_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"conversations",
								"{{conversation_id}}"
							]
						},
						"description": "Get detailed information about a specific conversation including recent messages"
					},
					"response": []
				},
				{
					"name": "Archive Conversation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"conversationId\": \"{{conversation_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/conversations/archive",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"conversations",
								"archive"
							]
						},
						"description": "Archive a conversation (soft delete)"
					},
					"response": []
				},
				{
					"name": "Delete Conversation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"conversationId\": \"{{conversation_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/conversations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"conversations"
							]
						},
						"description": "Permanently delete a conversation and all its messages (cannot be undone)"
					},
					"response": []
				},
				{
					"name": "Update Conversation Title",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"conversationId\": \"{{conversation_id}}\",\n  \"title\": \"Updated Conversation Title\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/conversations/title",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"conversations",
								"title"
							]
						},
						"description": "Update the title of a conversation"
					},
					"response": []
				}
			],
			"description": "Chat endpoints for AI conversations including enhanced conversation management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://f8lzhthj1l.execute-api.us-east-1.amazonaws.com",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "TestPass123!",
			"type": "string"
		},
		{
			"key": "test_full_name",
			"value": "Test User",
			"type": "string"
		},
		{
			"key": "new_password",
			"value": "NewPass123!",
			"type": "string"
		},
		{
			"key": "chat_message",
			"value": "Hello, how are you doing today?",
			"type": "string"
		},
		{
			"key": "verification_code",
			"value": "123456",
			"type": "string",
			"description": "Replace with actual verification code from email"
		},
		{
			"key": "reset_code",
			"value": "123456",
			"type": "string",
			"description": "Replace with actual reset code from email"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string",
			"description": "JWT access token - automatically set by login request"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string",
			"description": "JWT refresh token - automatically set by login request"
		},
		{
			"key": "id_token",
			"value": "",
			"type": "string",
			"description": "JWT ID token - automatically set by login request"
		},
		{
			"key": "user_sub",
			"value": "",
			"type": "string",
			"description": "User Cognito sub ID - automatically set by registration"
		},
		{
			"key": "conversation_id",
			"value": "",
			"type": "string",
			"description": "Conversation ID for testing - set manually or from Enhanced Mirror Chat response"
		}
	]
}
